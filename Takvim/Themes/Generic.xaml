<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:local="clr-namespace:Takvim">
    <local:FilePathToIconConverter x:Key="FilePathToIconConverter" />
    <Style TargetType="{x:Type local:MaskedTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost"
                                Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                            <Border Grid.Column="1"
                                Visibility="{Binding ClearButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <TextBlock FontWeight="Bold">
                                    <Hyperlink Command="{Binding Reset, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Run Text="X" />
                                    </Hyperlink>
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF7EB4EA" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF569DE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:ContentToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ContentToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding OverContent}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <CheckBox x:Name="Cb"
                                Grid.Column="1"
                                Visibility="{TemplateBinding StayOpenCheckBoxVisibility}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                VerticalAlignment="Center"
                                IsChecked="{TemplateBinding StaysOpen}" />
                            <Popup x:Name="Popup"
                                AllowsTransparency="True"
                                IsOpen="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                                PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                                PopupAnimation="Slide"
                                StaysOpen="{Binding ElementName=Cb, Path=IsChecked}">
                                <Themes:SystemDropShadowChrome>
                                    <ScrollViewer Padding="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </ScrollViewer>
                                </Themes:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsOpen, Converter={local:BoolInverter}, ElementName=Popup, Mode=OneWay}" Value="true">
                            <Setter Property="IsHitTestVisible" Value="true" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:FileSelectorTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FileSelectorTextBox}">
                    <Border IsEnabled="{TemplateBinding IsEnabled}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Text="{Binding FilePath, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" IsReadOnly="True" />
                            <Button Content="..." Grid.Column="1" Command="{Binding SelectFile, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ToggleButton x:Name="Tb" Grid.Column="2" Visibility="{Binding FileListPanelVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Data="M 0 0 L 4 4 L 8 0 Z" Fill="Black" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </ToggleButton>
                            <Popup x:Name="PART_Popup"
                                Grid.ColumnSpan="2"
                                Focusable="False"
                                IsOpen="{Binding IsChecked, ElementName=Tb}"
                                Placement="Right" PopupAnimation="Slide" StaysOpen="False">
                                <Border Background="White" BorderBrush="OliveDrab" BorderThickness="2.5"
                                    Padding="3">
                                    <ScrollViewer Width="250" Height="200"
                                        HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                        <ItemsControl ItemsSource="{Binding Dosyalar, RelativeSource={RelativeSource TemplatedParent}}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Width="32" Height="32" Source="{Binding Converter={StaticResource FilePathToIconConverter}, Mode=OneWay}" />
                                                        <TextBlock VerticalAlignment="Center">
                                                            <Hyperlink Command="{Binding RemoveItem, RelativeSource={RelativeSource AncestorType=local:FileSelectorTextBox}}" CommandParameter="{Binding Mode=OneWay}">
                                                                <Run Text="X" FontWeight="Bold" />
                                                            </Hyperlink>
                                                            <Run Text="{Binding Mode=OneWay}" />
                                                        </TextBlock>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsOpen, Converter={local:BoolInverter}, ElementName=PART_Popup, Mode=OneWay}" Value="true">
                            <Setter Property="IsHitTestVisible" Value="true" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:TimePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <ComboBox Text="{Binding TimeValue, RelativeSource={RelativeSource TemplatedParent}}"
                        ItemsSource="{Binding Saatler, RelativeSource={RelativeSource TemplatedParent}}"
                        IsEditable="True"
                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                        ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                        ItemTemplate="{TemplateBinding ItemTemplate}"
                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        ItemsPanel="{TemplateBinding ItemsPanel}">
                        <ComboBox.Template>
                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.Column="2"
                                        ClickMode="Press" Focusable="false"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                                            Data="M 0 0 L 4 4 L 8 0 Z" Fill="Black" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton>
                                    <Popup x:Name="PART_Popup"
                                        Grid.ColumnSpan="2"
                                        Focusable="False"
                                        IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                        Placement="Right" PopupAnimation="Slide">
                                        <Border Height="{TemplateBinding MaxDropDownHeight}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1">
                                            <ScrollViewer>
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <local:MaskedTextBox x:Name="PART_EditableTextBox"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        ClearButtonVisibility="{Binding ClearButtonVisible, RelativeSource={RelativeSource AncestorType=local:TimePicker}}"
                                        IncludePrompt="False" Mask="00:00" PromptChar="_" />
                                </Grid>
                            </ControlTemplate>
                        </ComboBox.Template>
                    </ComboBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>